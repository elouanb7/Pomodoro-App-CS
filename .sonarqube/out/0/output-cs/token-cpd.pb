”
(C:\dev\c#\Pomodoro-App-CS\app\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddRazorPages 
( 
)  
;  !
builder		 
.		 
Services		 
.		 
AddServerSideBlazor		 $
(		$ %
)		% &
;		& '
builder

 
.

 
Services

 
.

 
AddSingleton

 
<

 "
WeatherForecastService

 4
>

4 5
(

5 6
)

6 7
;

7 8
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
! 
app 
. 	
Environment	 
. 
IsDevelopment "
(" #
)# $
)$ %
{ 
app 
. 
UseExceptionHandler 
( 
$str $
)$ %
;% &
app 
. 
UseHsts 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseStaticFiles 
( 
) 
; 
app 
. 

UseRouting 
( 
) 
; 
app 
. 
MapBlazorHub 
( 
) 
; 
app 
. 
MapFallbackToPage 
( 
$str 
) 
;  
app 
. 
Run 
( 
) 	
;	 
¯
3C:\dev\c#\Pomodoro-App-CS\app\Pages\Error.cshtml.cs
	namespace 	
app
 
. 
Pages 
; 
[ 
ResponseCache 
( 
Duration 
= 
$num 
, 
Location %
=& '!
ResponseCacheLocation( =
.= >
None> B
,B C
NoStoreD K
=L M
trueN R
)R S
]S T
[ "
IgnoreAntiforgeryToken 
] 
public		 
class		 

ErrorModel		 
:		 
	PageModel		 #
{

 
public 

string 
? 
	RequestId 
{ 
get "
;" #
set$ '
;' (
}) *
public 

bool 
ShowRequestId 
=>  
!! "
string" (
.( )
IsNullOrEmpty) 6
(6 7
	RequestId7 @
)@ A
;A B
private 
readonly 
ILogger 
< 

ErrorModel '
>' (
_logger) 0
;0 1
public 


ErrorModel 
( 
ILogger 
< 

ErrorModel (
>( )
logger* 0
)0 1
{ 
_logger 
= 
logger 
; 
} 
public 

void 
OnGet 
( 
) 
{ 
	RequestId 
= 
Activity 
. 
Current $
?$ %
.% &
Id& (
??) +
HttpContext, 7
.7 8
TraceIdentifier8 G
;G H
} 
} ·
<C:\dev\c#\Pomodoro-App-CS\app\Data\WeatherForecastService.cs
	namespace 	
app
 
. 
Data 
; 
public 
class "
WeatherForecastService #
{ 
private 
static 
readonly 
string "
[" #
]# $
	Summaries% .
=/ 0
new1 4
[4 5
]5 6
{ 
$str 
, 
$str 
, 
$str '
,' (
$str) /
,/ 0
$str1 7
,7 8
$str9 ?
,? @
$strA H
,H I
$strJ O
,O P
$strQ ]
,] ^
$str_ j
} 
; 
public

 

Task

 
<

 
WeatherForecast

 
[

  
]

  !
>

! "
GetForecastAsync

# 3
(

3 4
DateOnly

4 <
	startDate

= F
)

F G
{ 
return 
Task 
. 

FromResult 
( 

Enumerable )
.) *
Range* /
(/ 0
$num0 1
,1 2
$num3 4
)4 5
.5 6
Select6 <
(< =
index= B
=>C E
newF I
WeatherForecastJ Y
{ 	
Date 
= 
	startDate 
. 
AddDays $
($ %
index% *
)* +
,+ ,
TemperatureC 
= 
Random !
.! "
Shared" (
.( )
Next) -
(- .
-. /
$num/ 1
,1 2
$num3 5
)5 6
,6 7
Summary 
= 
	Summaries 
[  
Random  &
.& '
Shared' -
.- .
Next. 2
(2 3
	Summaries3 <
.< =
Length= C
)C D
]D E
} 	
)	 

.
 
ToArray 
( 
) 
) 
; 
} 
} Ñ
5C:\dev\c#\Pomodoro-App-CS\app\Data\WeatherForecast.cs
	namespace 	
app
 
. 
Data 
; 
public 
class 
WeatherForecast 
{ 
public 

DateOnly 
Date 
{ 
get 
; 
set  #
;# $
}% &
public 

int 
TemperatureC 
{ 
get !
;! "
set# &
;& '
}( )
public		 

int		 
TemperatureF		 
=>		 
$num		 !
+		" #
(		$ %
int		% (
)		( )
(		) *
TemperatureC		* 6
/		7 8
$num		9 ?
)		? @
;		@ A
public 

string 
? 
Summary 
{ 
get  
;  !
set" %
;% &
}' (
} 